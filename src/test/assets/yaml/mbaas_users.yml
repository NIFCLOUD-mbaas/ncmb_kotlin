---
request:
    url: /2013-09-01/users
    method: POST
    body:
        userName: "Ncmb Tarou"
        password: "Ncmbtarou"
response:
    status: 201
    file: valid_post_registerUser_response.json
---
request:
    url: /2013-09-01/users
    method: POST
    query:
        userName: "Ncmb Tarou"
        password: "Ncmbtarou"
response:
    status: 201
    file: valid_post_registerUser_response.json
---
request:
    url: /2013-09-01/users
    method: POST
    body:
        authData:
            facebook:
                id: facebookDummyId
                access_token: facebookDummyAccessToken
                expiration_date:
                    __type: Date
                    iso: "2016-06-07T01:02:03.004Z"
response:
    status: 200
    file: valid_post_registerUserFacebook_response.json
---
request:
    url: /2013-09-01/users
    method: POST
    body:
        authData:
            facebook:
                id: invalidFacebookDummyId
                access_token: invalidFacebookDummyAccessToken
                expiration_date:
                    __type: Date
                    iso: "2016-06-07T01:02:03.004Z"
response:
    status: 401
    file: authentication_error_facebook.json
---
request:
    url: /2013-09-01/users/dummyUserId
    method: PUT
    body:
        authData:
            facebook:
                id: facebookDummyId
                access_token: facebookDummyAccessToken
                expiration_date:
                    __type: Date
                    iso: "2016-06-07T01:02:03.004Z"
response:
    status: 200
    file: valid_put_response.json
---
request:
    url: /2013-09-01/users/dummyUserId
    method: PUT
    body:
        authData:
            facebook:
                id: invalidFacebookDummyId
                access_token: invalidFacebookDummyAccessToken
                expiration_date:
                    __type: Date
                    iso: "2016-06-07T01:02:03.004Z"
response:
    status: 401
    file: authentication_error_facebook.json
---
request:
    url: /2013-09-01/users
    method: POST
    body:
        authData:
            twitter:
                id: twitterDummyId
                screen_name: twitterDummyScreenName
                oauth_consumer_key: twitterDummyConsumerKey
                consumer_secret: twitterDummyConsumerSecret
                oauth_token: twitterDummyOauthToken
                oauth_token_secret: twitterDummyOauthSecret
response:
    status: 200
    file: valid_post_registerUserTwitter_response.json
---
request:
    url: /2013-09-01/users
    method: POST
    body:
        authData:
            twitter:
                id: invalidTwitterDummyId
                screen_name: invalidTwitterDummyScreenName
                oauth_consumer_key: invalidTwitterDummyConsumerKey
                consumer_secret: invalidTwitterDummyConsumerSecret
                oauth_token: invalidTwitterDummyOauthToken
                oauth_token_secret: invalidTwitterDummyOauthSecret
response:
    status: 401
    file: authentication_error_twitter.json
---
request:
    url: /2013-09-01/users/dummyUserId
    method: PUT
    body:
        authData:
            twitter:
                id: twitterDummyId
                screen_name: twitterDummyScreenName
                oauth_consumer_key: twitterDummyConsumerKey
                consumer_secret: twitterDummyConsumerSecret
                oauth_token: twitterDummyOauthToken
                oauth_token_secret: twitterDummyOauthSecret
response:
    status: 200
    file: valid_put_response.json
---
request:
    url: /2013-09-01/users/dummyUserId
    method: PUT
    body:
        authData:
            twitter:
                id: invalidTwitterDummyId
                screen_name: invalidTwitterDummyScreenName
                oauth_consumer_key: invalidTwitterDummyConsumerKey
                consumer_secret: invalidTwitterDummyConsumerSecret
                oauth_token: invalidTwitterDummyOauthToken
                oauth_token_secret: invalidTwitterDummyOauthSecret
response:
    status: 401
    file: authentication_error_twitter.json
---
request:
    url: /2013-09-01/users
    method: POST
    body:
        authData:
            google:
                id: googleDummyId
                access_token: googleDummyAccessToken
response:
    status: 200
    file: valid_post_registerUserGoogle_response.json
---
request:
    url: /2013-09-01/users
    method: POST
    body:
        authData:
            google:
                id: invalidGoogleDummyId
                access_token: invalidGoogleDummyAccessToken
response:
    status: 401
    file: authentication_error_google.json
---
request:
    url: /2013-09-01/users/dummyUserId
    method: PUT
    body:
        authData:
            google:
                id: googleDummyId
                access_token: googleDummyAccessToken
response:
    status: 200
    file: valid_put_response.json
---
request:
    url: /2013-09-01/users/dummyUserId
    method: PUT
    body:
        authData:
            google:
                id: invalidGoogleDummyId
                access_token: invalidGoogleDummyAccessToken
response:
    status: 401
    file: authentication_error_google.json
---
request:
    url: /2013-09-01/users/dummyObjectId
    method: PUT
    body:
        authData:
            google: null
response:
    status: 200
    file: valid_put_response.json
---
request:
    url: /2013-09-01/users
    method: POST
    body:
        authData:
            anonymous:
                id: anonymousDummyId
response:
    status: 200
    file: valid_post_registerUserAnonymous_response.json
---
request:
    url: /2013-09-01/requestMailAddressUserEntry
    method: POST
    body:
        mailAddress: "sample@example.com"
response:
    status: 201
    file: valid_post_inviteByMail_response.json
---
request:
    url: /2013-09-01/requestPasswordReset
    method: POST
    body:
        mailAddress: "sample@example.com"
response:
    status: 201
    file: valid_post_requestPasswordReset_response.json
---
request:
    url: /2013-09-01/requestPasswordReset
    method: POST
    body:
        mailAddress: ""
response:
    status: 400
    file: valid_error_invalid_format.json
---
request:
    url: /2013-09-01/requestPasswordReset
    method: POST
    body:
        mailAddress: null
response:
    status: 400
    file: valid_error_missing_value.json
---
request:
    url: /2013-09-01/requestMailAddressUserEntry
    method: POST
response:
    status: 400
    file: valid_error_empty_mailAddress_response.json
---
request:
    url: /2013-09-01/users/dummyUserId
    method: GET
response:
    status: 200
    file: valid_get_getUser_response.json
---
request:
    url: /2013-09-01/users/dummyUserId
    method: PUT
    body:
        userName: "NCMB Tarou"
        mailAddress: "mobilebackend@example.com"
response:
    status: 200
    file: valid_put_response.json
---
request:
    url: /2013-09-01/users/dummyUserId
    method: PUT
    body:
        key: "value"
response:
    status: 200
    file: valid_put_response.json
---
request:
    url: /2013-09-01/users/dummyUserId
    method: PUT
    body:
        key: "value2"
response:
    status: 200
    file: valid_put_response.json
---
request:
    url: /2013-09-01/login
    method: POST
    body:
        userName: "Ncmb Tarou"
        password: "dummyPassword"
response:
    status: 200
    file: valid_get_login_response.json
---
request:
    url: /2013-09-01/login
    method: POST
    body:
        mailAddress: "sample@example.com"
        password: dummyPassword
response:
    status: 200
    file: valid_get_login_response.json
---
request:
    url: /2013-09-01/login
    method: POST
    body:
        mailAddress: "sample@example.com"
        password: "incorrectPassword"
response:
    status: 401
    file: valid_error_incorrect_password_response.json
---
request:
    url: /2013-09-01/login
    method: POST
    body:
        mailAddress: "sample@example.com"
response:
    status: 400
    file: valid_error_empty_password_response.json
---
request:
    url: /2013-09-01/login
    method: POST
    body:
        mailAddress: "sample@example.com"
        password: ""
response:
    status: 400
    file: valid_error_empty_password_response.json
---
request:
    url: /2013-09-01/logout
    method: GET
response:
    status: 200
    file: valid_get_logout_response.json
---
request:
    url: /2013-09-01/users
    method: GET
response:
    status: 200
    file: valid_get_searchUserAll_response.json
---
request:
    url: /2013-09-01/users
    method: GET
    query:
        where: '{"userName":"Ncmb Tarou"}'
response:
    status: 200
    file: valid_get_searchUser_response.json
---
request:
    url: /2013-09-01/users/dummyObjectId
    method: DELETE
response:
    status: 200
    file: valid_delete_response.json
---
request:
    url: /2013-09-01/users/notCurrentUserId
    method: DELETE
response:
    status: 200
    file: valid_delete_response.json
---
request:
    url: /2013-09-01/users/dummyObjectId
    method: PUT
    body:
        error: "test"
response:
    status: 401
    file: valid_error_header_incorrect_response.json
---
request:
    url: /2013-09-01/users/dummyObjectId
    method: PUT
    body:
        key: "value"
response:
    status: 200
    file: valid_put_response.json
---
request:
    url: /2013-09-01/users
    method: POST
    body:
        authData:
            anonymous: id
response:
    status: 200
    file: valid_post_registerUserAnonymous_response.json
---
request:
    url: /2013-09-01/users
    method: POST
    body:
        userName: "Ncmb Tarou"
        password: "Ncmbtarou"
        testField: "test"
response:
    status: 201
    file: valid_post_registerUser_response.json
---
request:
    url: /2013-09-01/users/dummyObjectId
    method: GET
response:
    status: 401
    file: authentication_error_user.json
---
request:
    url: /2013-09-01/classes/TestClass/getObjectExpiredToken
    method: GET
response:
    status: 401
    file: authentication_error_user.json
---
request:
    url: /2013-09-01/users/dummyAllowUserId
    method: GET
response:
    status: 401
    file: authentication_error_user.json
---
request:
    url: /2013-09-01/users/dummyNotfoundUserId
    method: GET
response:
    status: 404
    file: valid_error_userNotFound_response.json
---
request:
    url: /2013-09-01/login
    method: POST
    body:
        userName: "NcmbCurrentUser"
        password: dummyPassword
response:
    status: 200
    file: valid_get_getCurrentUser_response.json
---
request:
    url: /2013-09-01/users/dummyCurrentUserId
    method: GET
response:
    status: 404
    file: valid_error_userNotFound_response.json
---
request:
    url: /2013-09-01/login
    method: POST
    body:
        userName: "NcmbToTestAfterLogin"
        password: dummyPassword
response:
    status: 200
    file: valid_get_getUser_login_response.json
---
request:
    url: /2013-09-01/users/dummyUserLoginId
    method: GET
response:
    status: 200
    file: valid_get_getUser_login_response.json
---
request:
    url: /2013-09-01/users/dummyUserLoginId
    method: PUT
    body:
        key: "value"
response:
    status: 200
    file: valid_put_response.json
---
request:
    url: /2013-09-01/users
    method: POST
    body:
        userName: "NcmbToTestAfterLogin"
        password: "dummyPassword"
        authData: null
        mailAddress: null
        mailAddressConfirm: false
        createDate: "2015-01-01T00:00:00.000Z"
        updateDate: "2015-06-07T01:02:03.004Z"
        sessionToken: "dummySessionTokenUserLogin"
response:
    status: 409
    file: valid_post_register_duplicate_user_response.json
---
request:
    url: /2013-09-01/users/dummyUserLoginId
    method: PUT
    body:
        key: "value"
response:
    status: 200
    file: valid_put_response.json
---
request:
    url: /2013-09-01/login
    method: POST
    body:
        userName: "saveAfterLogin"
        password: saveAfterLogin
response:
    status: 200
    file: valid_get_login_to_save_user_response.json
---
