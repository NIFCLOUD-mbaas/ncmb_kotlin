// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {

    ext {
        kotlin_version = '1.5.20'
    }
    repositories {
        mavenCentral()
        gradlePluginPortal()
        google()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:7.1.3'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
        classpath 'com.google.gms:google-services:4.3.10'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

plugins {
    id 'com.android.library' version '7.3.1'
    id 'org.jetbrains.kotlin.android' version "${kotlin_version}"
    id 'org.jetbrains.kotlin.plugin.serialization' version "${kotlin_version}"
    id 'org.jetbrains.dokka' version '1.6.0'
}


android {
    compileSdkVersion 31

    buildToolsVersion "30.0.3"
    defaultConfig {
        minSdkVersion 20
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}


dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-runtime:1.0-M1-1.4.0-rc'
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.4'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.4'
    implementation 'androidx.test:core-ktx:1.4.0'
    testImplementation 'junit:junit:4.13.2'
    testImplementation "com.nhaarman:mockito-kotlin:1.5.0"
    testImplementation 'org.mockito:mockito-inline:3.11.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    implementation("com.squareup.okhttp3:okhttp:4.8.1")
    testImplementation("com.squareup.okhttp3:okhttp:4.8.1")
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.8.1'
    implementation 'com.google.code.gson:gson:2.8.6'
    testImplementation 'org.yaml:snakeyaml:1.17'
    testImplementation 'org.skyscreamer:jsonassert:1.5.0'
    testImplementation 'org.robolectric:robolectric:4.5.1'
    testImplementation "org.jetbrains.kotlin:kotlin-test"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit"
    def lifecycle_version = "1.1.1"
    testImplementation "android.arch.core:core-testing:$lifecycle_version"
    def coroutines_version = '1.3.9' //Kotlin coroutines用ライブラリ(async, await)のバージョン
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version" //Kotlin coroutines用ライブラリ(async, await)
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version" //Kotlin coroutines用ライブラリ(async, await)

    // Import the BoM for the Firebase platform
    implementation platform('com.google.firebase:firebase-bom:28.1.0')
    // Declare the dependency for the Firebase SDK for Google Analytics
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-messaging-ktx'

    // Use the Kotlin test library.
    testImplementation "org.jetbrains.kotlin:kotlin-test"
    // Use the Kotlin JUnit integration.
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit"

}

task clearJar(type: Delete) {
    delete 'release/' + JAR_NAME
}

task makeJar(type: Copy) {
    from('build/intermediates/aar_main_jar/release')
    into('release/')
    include('classes.jar')
    rename('classes.jar', JAR_NAME)
}
makeJar.dependsOn(clearJar, build)

dokkaHtml.configure{
    outputDirectory.set(new File("${projectDir}/docs/"))
    dokkaSourceSets{
        named("main"){
            moduleName.set("ncmb_kotlin")
            includes.from("Module.md")
            supress.set(true)
            noJdkLink.set(false)
            noAndroidSdkLink.set(false)
            includeNonPublic.set(false)
            sourceLink {
                localDirectory.set(file("src/main/java/com/nifcloud/mbaas"))
                remoteUrl.set(URL("https://github.com/NIFCLOUD-mbaas/ncmb_kotlin"))
                remoteLineSuffix.set("#L")
            }
        }
    }
}





